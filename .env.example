# Available options: production | development | test
APP_ENV=development

# Next.js overrides NODE_ENV via run scripts (e.g. next dev), thus APP_ENV is needed
NODE_ENV=${APP_ENV}

# Prisma database connector
# https://www.prisma.io/docs/reference/database-reference/connection-urls#env
DATABASE_URL=file:./prod-db.sqlite

# Whether signup form should use redirections on submit or rather return API responses
# Available options: redirect | api
SIGNUP_FORM_ACTION=redirect

# App base URL
APP_URL=http://localhost:3000

# Email address use to log in to dashboard in production environment
ADMIN_EMAIL=email@example.com

# Next.js
NEXT_PUBLIC_BASE_URL=${APP_URL}

# NextAuth.js
NEXTAUTH_URL=${APP_URL}

# Secret required for securing auth token
# You can generate it via CLI: openssl rand -base64 32
# https://next-auth.js.org/configuration/options#secret
NEXTAUTH_SECRET=change-me!

# SMTP server
# For development use: https://ethereal.email/create
EMAIL_SERVER_HOST=
EMAIL_SERVER_PORT=
EMAIL_SERVER_USER=
EMAIL_SERVER_PASSWORD=
NEXT_PUBLIC_EMAIL_FROM=John Doe <email@example.com>

# Split sending volume (message per second) from SMTP server between newsletter and autoresponder
# Newsletter should get significantly higher share to speed up sending high volume messages
# Autoresponder is less busy most of the time
# E.g. if SMTP server allows sending 14 emails per second, set 11 for newsletter 2 for autoresponder and leave 1 as a safe buffer
MAX_SEND_RATE_PER_SECOND_NEWSLETTER=11
MAX_SEND_RATE_PER_SECOND_AUTORESPONDER=2
